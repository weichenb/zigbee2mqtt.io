"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[14974],{61442:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>n,data:()=>l});var s=t(38178);const o={},n=(0,t(66516).A)(o,[["render",function(e,a){const t=(0,s.g2)("RouteLink");return(0,s.uX)(),(0,s.CE)("div",null,[a[7]||(a[7]=(0,s.Lk)("h1",{id:"nous-e9",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#nous-e9"},[(0,s.Lk)("span",null,"Nous E9")])],-1)),(0,s.Lk)("table",null,[a[6]||(a[6]=(0,s.Lk)("thead",null,[(0,s.Lk)("tr",null,[(0,s.Lk)("th"),(0,s.Lk)("th")])],-1)),(0,s.Lk)("tbody",null,[a[2]||(a[2]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Model"),(0,s.Lk)("td",null,"E9")],-1)),(0,s.Lk)("tr",null,[a[1]||(a[1]=(0,s.Lk)("td",null,"Vendor",-1)),(0,s.Lk)("td",null,[(0,s.bF)(t,{to:"/supported-devices/#v=Nous"},{default:(0,s.k6)((()=>a[0]||(a[0]=[(0,s.eW)("Nous")]))),_:1,__:[0]})])]),a[3]||(a[3]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Description"),(0,s.Lk)("td",null,"Zigbee gas sensor")],-1)),a[4]||(a[4]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Exposes"),(0,s.Lk)("td",null,"gas, preheat, fault_alarm, lifecycle")],-1)),a[5]||(a[5]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Picture"),(0,s.Lk)("td",null,[(0,s.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/E9.png",alt:"Nous E9"})])],-1))])]),a[8]||(a[8]=(0,s.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="gas-binary" tabindex="-1"><a class="header-anchor" href="#gas-binary"><span>Gas (binary)</span></a></h3><p>Gas detection state (ON = Gas detected). Value can be found in the published state on the <code>gas</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>ON</code> gas is ON, if <code>OFF</code> OFF.</p><h3 id="preheat-binary" tabindex="-1"><a class="header-anchor" href="#preheat-binary"><span>Preheat (binary)</span></a></h3><p>Sensor is preheating. Value can be found in the published state on the <code>preheat</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>ON</code> preheat is ON, if <code>OFF</code> OFF.</p><h3 id="fault-alarm-binary" tabindex="-1"><a class="header-anchor" href="#fault-alarm-binary"><span>Fault alarm (binary)</span></a></h3><p>Sensor fault detected. Value can be found in the published state on the <code>fault_alarm</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>ON</code> fault alarm is ON, if <code>OFF</code> OFF.</p><h3 id="lifecycle-numeric" tabindex="-1"><a class="header-anchor" href="#lifecycle-numeric"><span>Lifecycle (numeric)</span></a></h3><p>Sensor life remaining. Value can be found in the published state on the <code>lifecycle</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>%</code>.</p>',9))])}]]),l=JSON.parse('{"path":"/devices/E9.html","title":"Nous E9 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Nous E9 control via MQTT","description":"Integrate your Nous E9 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-07-01T17:54:38.000Z"},"git":{"updatedTime":1751493368000,"contributors":[{"name":"weichenb","username":"weichenb","email":"thomasg@weichenberger4u.de","commits":1,"url":"https://github.com/weichenb"}],"changelog":[{"hash":"e4c66cbc43255f9ca767b170ba2b9683a9fc01cf","time":1751493368000,"email":"thomasg@weichenberger4u.de","author":"weichenb","message":"SC500ZB-v4 adjustment in expose list"}]},"filePathRelative":"devices/E9.md"}')}}]);